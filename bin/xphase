#!/usr/bin/env ruby

require 'optparse'


options = {}

optparse = OptionParser.new do |opts|

    opts.banner  = "Usage:\n\n"
    opts.banner += "\t$ xphase command [options]\n\n"
    opts.banner += "Commands:\n\n"
    opts.banner += "\t+ init - Creates a new template xphase.json file.\n"
    opts.banner += "\t+ install - Install the phases defined in the xphase.json file.\n"
    opts.banner += "\t+ uninstall - Uninstall all the shell scripts from the project.\n"
    opts.banner += "\n"
    opts.banner += "Options:\n"
    opts.banner += "\n"


    opts.on( '-v', '--version', 'Output version information' ) do
        require 'xphase/gem_version'
        puts "Xphase version v" + Xphase::VERSION + " by Tibor BÃ¶decs<mail.tib@gmail.com>"
        exit
    end

    opts.on( '-h', '--help', 'Display this screen' ) do
        puts opts
        exit
    end
end


begin
    optparse.parse!

    mandatory = []
    missing = mandatory.select do |param|
        options[param].nil?
    end
    unless missing.empty?
        raise OptionParser::MissingArgument.new(missing.join(', '))
    end
rescue OptionParser::InvalidOption, OptionParser::MissingArgument
    puts $!.to_s
    puts optparse
    exit
end

command = ARGV.shift
unless command
    puts "Error: command not found!\n\n"
    puts optparse
    exit
end

require 'xphase'

xphase = Xphase.new

case command
when 'init'
  xphase.init
  exit
when 'install'
  xphase.install
  exit
when 'uninstall'
  xphase.uninstall
  exit
end

puts "Error: invalid command!\n\n"
puts optparse
exit



